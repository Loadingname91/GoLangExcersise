// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: greet/greetPb/streamming.proto

package GreetAPIManyTimes

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Greeting struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName           string   `protobuf:"bytes,2,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Greeting) Reset()         { *m = Greeting{} }
func (m *Greeting) String() string { return proto.CompactTextString(m) }
func (*Greeting) ProtoMessage()    {}
func (*Greeting) Descriptor() ([]byte, []int) {
	return fileDescriptor_39b3b300a457a897, []int{0}
}
func (m *Greeting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Greeting.Unmarshal(m, b)
}
func (m *Greeting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Greeting.Marshal(b, m, deterministic)
}
func (m *Greeting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Greeting.Merge(m, src)
}
func (m *Greeting) XXX_Size() int {
	return xxx_messageInfo_Greeting.Size(m)
}
func (m *Greeting) XXX_DiscardUnknown() {
	xxx_messageInfo_Greeting.DiscardUnknown(m)
}

var xxx_messageInfo_Greeting proto.InternalMessageInfo

func (m *Greeting) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Greeting) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

type GreetRequestManyTimes struct {
	Greeting             *Greeting `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GreetRequestManyTimes) Reset()         { *m = GreetRequestManyTimes{} }
func (m *GreetRequestManyTimes) String() string { return proto.CompactTextString(m) }
func (*GreetRequestManyTimes) ProtoMessage()    {}
func (*GreetRequestManyTimes) Descriptor() ([]byte, []int) {
	return fileDescriptor_39b3b300a457a897, []int{1}
}
func (m *GreetRequestManyTimes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetRequestManyTimes.Unmarshal(m, b)
}
func (m *GreetRequestManyTimes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetRequestManyTimes.Marshal(b, m, deterministic)
}
func (m *GreetRequestManyTimes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetRequestManyTimes.Merge(m, src)
}
func (m *GreetRequestManyTimes) XXX_Size() int {
	return xxx_messageInfo_GreetRequestManyTimes.Size(m)
}
func (m *GreetRequestManyTimes) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetRequestManyTimes.DiscardUnknown(m)
}

var xxx_messageInfo_GreetRequestManyTimes proto.InternalMessageInfo

func (m *GreetRequestManyTimes) GetGreeting() *Greeting {
	if m != nil {
		return m.Greeting
	}
	return nil
}

type GreetResponseManyTimes struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetResponseManyTimes) Reset()         { *m = GreetResponseManyTimes{} }
func (m *GreetResponseManyTimes) String() string { return proto.CompactTextString(m) }
func (*GreetResponseManyTimes) ProtoMessage()    {}
func (*GreetResponseManyTimes) Descriptor() ([]byte, []int) {
	return fileDescriptor_39b3b300a457a897, []int{2}
}
func (m *GreetResponseManyTimes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetResponseManyTimes.Unmarshal(m, b)
}
func (m *GreetResponseManyTimes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetResponseManyTimes.Marshal(b, m, deterministic)
}
func (m *GreetResponseManyTimes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetResponseManyTimes.Merge(m, src)
}
func (m *GreetResponseManyTimes) XXX_Size() int {
	return xxx_messageInfo_GreetResponseManyTimes.Size(m)
}
func (m *GreetResponseManyTimes) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetResponseManyTimes.DiscardUnknown(m)
}

var xxx_messageInfo_GreetResponseManyTimes proto.InternalMessageInfo

func (m *GreetResponseManyTimes) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Greeting)(nil), "StreamGreet.Greeting")
	proto.RegisterType((*GreetRequestManyTimes)(nil), "StreamGreet.GreetRequestManyTimes")
	proto.RegisterType((*GreetResponseManyTimes)(nil), "StreamGreet.GreetResponseManyTimes")
}

func init() { proto.RegisterFile("greet/greetPb/streamming.proto", fileDescriptor_39b3b300a457a897) }

var fileDescriptor_39b3b300a457a897 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0x2f, 0x4a, 0x4d,
	0x2d, 0xd1, 0x07, 0x93, 0x01, 0x49, 0xfa, 0xc5, 0x25, 0x45, 0xa9, 0x89, 0xb9, 0xb9, 0x99, 0x79,
	0xe9, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xdc, 0xc1, 0x60, 0x11, 0x77, 0x90, 0xbc, 0x92,
	0x17, 0x17, 0x07, 0x98, 0x91, 0x99, 0x97, 0x2e, 0x24, 0xcb, 0xc5, 0x95, 0x96, 0x59, 0x54, 0x5c,
	0x12, 0x9f, 0x97, 0x98, 0x9b, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x09, 0x16, 0xf1,
	0x4b, 0xcc, 0x4d, 0x15, 0x92, 0xe7, 0xe2, 0x2e, 0x4e, 0x4d, 0xce, 0xcf, 0x4b, 0x81, 0xc8, 0x33,
	0x81, 0xe5, 0xb9, 0x20, 0x42, 0x20, 0x05, 0x4a, 0x5e, 0x5c, 0xa2, 0x60, 0xb3, 0x82, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x7c, 0x13, 0xf3, 0x2a, 0x43, 0x32, 0x73, 0x53, 0x8b, 0x85, 0x0c, 0xb9,
	0x38, 0xd2, 0xa1, 0x96, 0x80, 0x8d, 0xe5, 0x36, 0x12, 0xd5, 0x43, 0x72, 0x84, 0x1e, 0xcc, 0x05,
	0x41, 0x70, 0x65, 0x4a, 0x06, 0x5c, 0x62, 0x50, 0xb3, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x11,
	0x86, 0x89, 0x71, 0xb1, 0x15, 0xa5, 0x16, 0x97, 0xe6, 0x94, 0x40, 0x5d, 0x08, 0xe5, 0x19, 0xe5,
	0x72, 0xf1, 0x80, 0x75, 0x04, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0xc5, 0x72, 0xf1, 0x81,
	0xf9, 0x08, 0x9d, 0x4a, 0x98, 0x96, 0xa2, 0x3b, 0x55, 0x4a, 0x19, 0x9b, 0x1a, 0x34, 0x27, 0x28,
	0x31, 0x18, 0x30, 0x3a, 0x49, 0x45, 0x49, 0x40, 0x54, 0xea, 0x83, 0x15, 0x39, 0x06, 0x78, 0xc2,
	0xe5, 0x93, 0xd8, 0xc0, 0x01, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xf7, 0xa9, 0x1c,
	0x8a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreetServiceClient is the client API for GreetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreetServiceClient interface {
	// Server streamming
	GreetManyTimes(ctx context.Context, in *GreetRequestManyTimes, opts ...grpc.CallOption) (GreetService_GreetManyTimesClient, error)
}

type greetServiceClient struct {
	cc *grpc.ClientConn
}

func NewGreetServiceClient(cc *grpc.ClientConn) GreetServiceClient {
	return &greetServiceClient{cc}
}

func (c *greetServiceClient) GreetManyTimes(ctx context.Context, in *GreetRequestManyTimes, opts ...grpc.CallOption) (GreetService_GreetManyTimesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[0], "/StreamGreet.GreetService/GreetManyTimes", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceGreetManyTimesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GreetService_GreetManyTimesClient interface {
	Recv() (*GreetResponseManyTimes, error)
	grpc.ClientStream
}

type greetServiceGreetManyTimesClient struct {
	grpc.ClientStream
}

func (x *greetServiceGreetManyTimesClient) Recv() (*GreetResponseManyTimes, error) {
	m := new(GreetResponseManyTimes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GreetServiceServer is the server API for GreetService service.
type GreetServiceServer interface {
	// Server streamming
	GreetManyTimes(*GreetRequestManyTimes, GreetService_GreetManyTimesServer) error
}

// UnimplementedGreetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGreetServiceServer struct {
}

func (*UnimplementedGreetServiceServer) GreetManyTimes(req *GreetRequestManyTimes, srv GreetService_GreetManyTimesServer) error {
	return status.Errorf(codes.Unimplemented, "method GreetManyTimes not implemented")
}

func RegisterGreetServiceServer(s *grpc.Server, srv GreetServiceServer) {
	s.RegisterService(&_GreetService_serviceDesc, srv)
}

func _GreetService_GreetManyTimes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GreetRequestManyTimes)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreetServiceServer).GreetManyTimes(m, &greetServiceGreetManyTimesServer{stream})
}

type GreetService_GreetManyTimesServer interface {
	Send(*GreetResponseManyTimes) error
	grpc.ServerStream
}

type greetServiceGreetManyTimesServer struct {
	grpc.ServerStream
}

func (x *greetServiceGreetManyTimesServer) Send(m *GreetResponseManyTimes) error {
	return x.ServerStream.SendMsg(m)
}

var _GreetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StreamGreet.GreetService",
	HandlerType: (*GreetServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GreetManyTimes",
			Handler:       _GreetService_GreetManyTimes_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "greet/greetPb/streamming.proto",
}
