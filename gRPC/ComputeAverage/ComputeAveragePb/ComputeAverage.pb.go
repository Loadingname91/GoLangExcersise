// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ComputeAverage/ComputeAverage_proto/ComputeAverage.proto

package ComputeAveragePb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NumberInput struct {
	Number               float32  `protobuf:"fixed32,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberInput) Reset()         { *m = NumberInput{} }
func (m *NumberInput) String() string { return proto.CompactTextString(m) }
func (*NumberInput) ProtoMessage()    {}
func (*NumberInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_eeae015a4cd643b0, []int{0}
}
func (m *NumberInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberInput.Unmarshal(m, b)
}
func (m *NumberInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberInput.Marshal(b, m, deterministic)
}
func (m *NumberInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberInput.Merge(m, src)
}
func (m *NumberInput) XXX_Size() int {
	return xxx_messageInfo_NumberInput.Size(m)
}
func (m *NumberInput) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberInput.DiscardUnknown(m)
}

var xxx_messageInfo_NumberInput proto.InternalMessageInfo

func (m *NumberInput) GetNumber() float32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ComputedAverageRequest struct {
	Input                *NumberInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ComputedAverageRequest) Reset()         { *m = ComputedAverageRequest{} }
func (m *ComputedAverageRequest) String() string { return proto.CompactTextString(m) }
func (*ComputedAverageRequest) ProtoMessage()    {}
func (*ComputedAverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eeae015a4cd643b0, []int{1}
}
func (m *ComputedAverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputedAverageRequest.Unmarshal(m, b)
}
func (m *ComputedAverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputedAverageRequest.Marshal(b, m, deterministic)
}
func (m *ComputedAverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputedAverageRequest.Merge(m, src)
}
func (m *ComputedAverageRequest) XXX_Size() int {
	return xxx_messageInfo_ComputedAverageRequest.Size(m)
}
func (m *ComputedAverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputedAverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputedAverageRequest proto.InternalMessageInfo

func (m *ComputedAverageRequest) GetInput() *NumberInput {
	if m != nil {
		return m.Input
	}
	return nil
}

type ComputedAverageResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputedAverageResponse) Reset()         { *m = ComputedAverageResponse{} }
func (m *ComputedAverageResponse) String() string { return proto.CompactTextString(m) }
func (*ComputedAverageResponse) ProtoMessage()    {}
func (*ComputedAverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eeae015a4cd643b0, []int{2}
}
func (m *ComputedAverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputedAverageResponse.Unmarshal(m, b)
}
func (m *ComputedAverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputedAverageResponse.Marshal(b, m, deterministic)
}
func (m *ComputedAverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputedAverageResponse.Merge(m, src)
}
func (m *ComputedAverageResponse) XXX_Size() int {
	return xxx_messageInfo_ComputedAverageResponse.Size(m)
}
func (m *ComputedAverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputedAverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputedAverageResponse proto.InternalMessageInfo

func (m *ComputedAverageResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*NumberInput)(nil), "StreamClient.NumberInput")
	proto.RegisterType((*ComputedAverageRequest)(nil), "StreamClient.ComputedAverageRequest")
	proto.RegisterType((*ComputedAverageResponse)(nil), "StreamClient.ComputedAverageResponse")
}

func init() {
	proto.RegisterFile("ComputeAverage/ComputeAverage_proto/ComputeAverage.proto", fileDescriptor_eeae015a4cd643b0)
}

var fileDescriptor_eeae015a4cd643b0 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x70, 0xce, 0xcf, 0x2d,
	0x28, 0x2d, 0x49, 0x75, 0x2c, 0x4b, 0x2d, 0x4a, 0x4c, 0x4f, 0xd5, 0x47, 0xe5, 0xc6, 0x17, 0x14,
	0xe5, 0x97, 0xe4, 0xa3, 0x09, 0xea, 0x81, 0x05, 0x85, 0x78, 0x82, 0x4b, 0x8a, 0x52, 0x13, 0x73,
	0x9d, 0x73, 0x32, 0x53, 0xf3, 0x4a, 0x94, 0x54, 0xb9, 0xb8, 0xfd, 0x4a, 0x73, 0x93, 0x52, 0x8b,
	0x3c, 0xf3, 0x0a, 0x4a, 0x4b, 0x84, 0xc4, 0xb8, 0xd8, 0xf2, 0xc0, 0x5c, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xa6, 0x20, 0x28, 0x4f, 0xc9, 0x93, 0x4b, 0x0c, 0x6a, 0x58, 0x0a, 0xd4, 0xb4, 0xa0, 0xd4,
	0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x7d, 0x2e, 0xd6, 0x4c, 0x90, 0x56, 0xb0, 0x06, 0x6e, 0x23,
	0x49, 0x3d, 0x64, 0xe3, 0xf5, 0x90, 0xcc, 0x0e, 0x82, 0xa8, 0x53, 0x32, 0xe4, 0x12, 0xc7, 0x30,
	0xaa, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0x64, 0x7b, 0x51, 0x6a, 0x71, 0x69, 0x4e, 0x09, 0xcc,
	0x76, 0x08, 0xcf, 0xa8, 0x84, 0x8b, 0x1f, 0x4d, 0x8b, 0x50, 0x22, 0x17, 0x1f, 0xaa, 0xef, 0x84,
	0x54, 0x50, 0x6d, 0xc6, 0xee, 0x5c, 0x29, 0x55, 0x02, 0xaa, 0x20, 0x2e, 0x51, 0x62, 0xd0, 0x60,
	0x74, 0x12, 0x8e, 0x12, 0x44, 0x0b, 0xc1, 0x80, 0xa4, 0x24, 0x36, 0x70, 0x20, 0x1a, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xe3, 0x48, 0xd3, 0xed, 0x80, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ComputedAverageClient is the client API for ComputedAverage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComputedAverageClient interface {
	// Client streamming
	ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (ComputedAverage_ComputeAverageClient, error)
}

type computedAverageClient struct {
	cc *grpc.ClientConn
}

func NewComputedAverageClient(cc *grpc.ClientConn) ComputedAverageClient {
	return &computedAverageClient{cc}
}

func (c *computedAverageClient) ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (ComputedAverage_ComputeAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ComputedAverage_serviceDesc.Streams[0], "/StreamClient.ComputedAverage/ComputeAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &computedAverageComputeAverageClient{stream}
	return x, nil
}

type ComputedAverage_ComputeAverageClient interface {
	Send(*ComputedAverageRequest) error
	CloseAndRecv() (*ComputedAverageResponse, error)
	grpc.ClientStream
}

type computedAverageComputeAverageClient struct {
	grpc.ClientStream
}

func (x *computedAverageComputeAverageClient) Send(m *ComputedAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *computedAverageComputeAverageClient) CloseAndRecv() (*ComputedAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputedAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ComputedAverageServer is the server API for ComputedAverage service.
type ComputedAverageServer interface {
	// Client streamming
	ComputeAverage(ComputedAverage_ComputeAverageServer) error
}

// UnimplementedComputedAverageServer can be embedded to have forward compatible implementations.
type UnimplementedComputedAverageServer struct {
}

func (*UnimplementedComputedAverageServer) ComputeAverage(srv ComputedAverage_ComputeAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method ComputeAverage not implemented")
}

func RegisterComputedAverageServer(s *grpc.Server, srv ComputedAverageServer) {
	s.RegisterService(&_ComputedAverage_serviceDesc, srv)
}

func _ComputedAverage_ComputeAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ComputedAverageServer).ComputeAverage(&computedAverageComputeAverageServer{stream})
}

type ComputedAverage_ComputeAverageServer interface {
	SendAndClose(*ComputedAverageResponse) error
	Recv() (*ComputedAverageRequest, error)
	grpc.ServerStream
}

type computedAverageComputeAverageServer struct {
	grpc.ServerStream
}

func (x *computedAverageComputeAverageServer) SendAndClose(m *ComputedAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *computedAverageComputeAverageServer) Recv() (*ComputedAverageRequest, error) {
	m := new(ComputedAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ComputedAverage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StreamClient.ComputedAverage",
	HandlerType: (*ComputedAverageServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ComputeAverage",
			Handler:       _ComputedAverage_ComputeAverage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "ComputeAverage/ComputeAverage_proto/ComputeAverage.proto",
}
